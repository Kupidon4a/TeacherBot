from telegram import Update
from telegram.ext import ContextTypes
from Data_Base.database import db
from Admin.send_large_message import send_large_message

#–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–µ–º
async def get_topics(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        requester = update.effective_user.username

        if not db.is_admin(requester):
            await update.effective_message.reply_text("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
            return

        topics = db.admin_get_topics()
        
        if not topics:
            await update.effective_message.reply_text("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∫—É—Ä—Å–æ–≤.")
            return
        message = "üìä –°–ø–∏—Å–æ–∫ —Ç–µ–º:\n\n"
        for i, topic in enumerate(topics, 1):
            
            message += (
                f"{i}. üìò –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: {topic['discipline']}\n"
                f"   üìó –ö—É—Ä—Å: {topic['course']}\n"
                f"   üìô –¢–µ–º–∞: {topic['topic']}\n\n"
            )
        
        await send_large_message(update, message)
        
    except Exception as e:
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–º: {str(e)}")